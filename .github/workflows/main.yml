name: deploy-images-to-gh-registry
run-name: ${{ github.actor }} is pushing to GitHub registry

on: push

env:
  REGISTRY: ghcr.io
  DOCKER_PATH: ./docker
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-images:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./docker/api/Dockerfile
            image_name: health-statistic-api
          - dockerfile: ./docker/db/Dockerfile
            image_name: health-statistic-db
    steps:
      - name: Checkout GitHub Action
        uses: actions/checkout@main

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ github.actor }}/${{ matrix.image_name }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # deploy:
  #   needs: build-and-push-images
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: copy file via ssh password
  #       uses: appleboy/scp-action@v0.1.4
  #       with:
  #         host: ${{ secrets.EC2_HOST }}
  #         username: ${{ secrets.EC2_USERNAME }}
  #         key: ${{ secrets.EC2_KEY }}
  #         port: ${{ secrets.EC2_PORT }}
  #         source: "docker-compose.yml"
  #         target: ~/health-statistic

  #     - name: SSH to Kamatera and deploy
  #       uses: appleboy/ssh-action@v0.1.10
  #       with:
  #         host: ${{ secrets.EC2_HOST }}
  #         username: ${{ secrets.EC2_USERNAME }}
  #         key: ${{ secrets.EC2_KEY }}
  #         port: ${{ secrets.EC2_PORT }}
  #         script: |
  #           cd ~/health-statistic
  #           docker compose -e up
