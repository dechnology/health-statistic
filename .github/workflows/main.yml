name: deploy-images-to-gh-registry
run-name: ${{ github.actor }} is deploying...

on: push

env:
  REGISTRY: ghcr.io
  DOCKER_PATH: ./docker
  IMAGE_NAME: ${{ github.repository }}
  POSTGRES_PORT: 5432
  POSTGRES_USER: postgres
  POSTGRES_DB: health-statistic
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}

  AUTH0_ISSUER_URL: https://itri-dechnology.jp.auth0.com/
  AUTH0_AUDIENCE: https://health-statistic.dechnology.com.tw

jobs:
  build-and-push-images:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./docker/api/Dockerfile
            image_name: health-statistic-api
          - dockerfile: ./docker/db/Dockerfile
            image_name: health-statistic-db
    steps:
      - name: Checkout GitHub Action
        uses: actions/checkout@main

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ github.actor }}/${{ matrix.image_name }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          # platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    # needs: build-and-push-images
    runs-on: ubuntu-latest
    steps:
      - name: SSH to EC2 and deploy
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          port: ${{ secrets.EC2_PORT }}
          script: |
            cd ~
            mkdir source || true
            cd source || exit 1
  
            export POSTGRES_PORT=${{ env.POSTGRES_PORT }}
            export POSTGRES_USER=${{ env.POSTGRES_USER }}
            export POSTGRES_DB=${{ env.POSTGRES_DB }}
            export POSTGRES_PASSWORD=${{ env.POSTGRES_PASSWORD }}
            export AUTH0_ISSUER_URL=${{ env.AUTH0_ISSUER_URL }}
            export AUTH0_AUDIENCE=${{ env.AUTH0_AUDIENCE }}

            git clone https://github.com/eesoymilk/health-statistic.git || true
            cd health-statistic || exit 1
            git reset --hard
            git pull --force

            sudo docker compose down
            sudo docker system prune -f
            sudo docker compose pull
            sudo docker compose up -d
